{"version":3,"sources":["icons/add.svg","icons/load.svg","icons/delete.svg","icons/burger.svg","icons/collapse.svg","icons/img.svg","logo.svg","components/PosterList/Dnd.js","components/PosterList/PosterList.js","components/CourseTestContainer/icons/PosterIcon.js","components/CourseTestContainer/icons/LessonIcon.js","components/LessonList/VideoDrop/VideoDrop.js","components/LessonList/ImageDrop/ImageDrop.js","components/LessonList/LessonList.js","components/CourseTestContainer/CourseTestContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Dnd","props","count","state","items","Array","from","length","v","k","map","id","content","onDragEnd","bind","result","destination","list","startIndex","endIndex","splice","removed","reorder","this","posters","source","index","onPostersChange","droppableId","provided","snapshot","droppableProps","ref","innerRef","style","isDraggingOver","width","item","key","draggableId","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","padding","margin","cursor","className","maxHeight","maxWidth","src","url","alt","onClick","filter","e","deleteIcon","burgerIcon","placeholder","Component","PosterList","htmlFor","addIcon","onChange","stopPropagation","preventDefault","target","files","file","file_url","URL","createObjectURL","uuidv4","value","display","type","PosterIcon","color","height","viewBox","fill","xmlns","d","LessonIcon","VideoDrop","onVideoChange","useState","active","setActive","input","setInput","setNotActive","onDragOver","onDragLeave","onDragExit","onDrop","dataTransfer","i","kind","getAsFile","click","loadIcon","ImageDrop","onPosterChange","imgIcon","LessonList","lessons","onLessonsChange","openedId","setOpenedId","updateLesson","lesson","findIndex","slice","isOpen","find","transform","collapseIcon","Collapse","video_url","controls","poster_url","backgroundImage","name","description","STEPS","CourseTestContainer","step","setStep","course","setCourse","useEffect","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.36b4d61e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/add.c60a1889.svg\";","module.exports = __webpack_public_path__ + \"static/media/load.745f8463.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.314264c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/burger.6385915d.svg\";","module.exports = __webpack_public_path__ + \"static/media/collapse.a0509c91.svg\";","module.exports = __webpack_public_path__ + \"static/media/img.3ab8affd.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nimport deleteIcon from '../../icons/delete.svg'\r\nimport burgerIcon from '../../icons/burger.svg'\r\n\r\n// fake data generator\r\nconst getItems = count =>\r\n    Array.from({ length: count }, (v, k) => k).map(k => ({\r\n        id: `item-${k}`,\r\n        content: `item ${k}`\r\n    }));\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n};\r\n\r\nconst grid = 8;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n    // some basic styles to make the items look a bit nicer\r\n    userSelect: \"none\",\r\n    padding: grid,\r\n    margin: `0 0 ${grid}px 0`,\r\n    cursor: 'default',\r\n\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n    width: '100%'\r\n});\r\n\r\nexport default class Dnd extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: getItems(10)\r\n        };\r\n        this.onDragEnd = this.onDragEnd.bind(this);\r\n    }\r\n\r\n    onDragEnd(result) {\r\n        // dropped outside the list\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n\r\n        const items = reorder(\r\n            this.props.posters,\r\n            result.source.index,\r\n            result.destination.index\r\n        );\r\n\r\n        this.props.onPostersChange(items);\r\n    }\r\n\r\n    // Normally you would want to split things out into separate components.\r\n    // But in this example everything is just done in one place for simplicity\r\n    render() {\r\n        const posters = this.props.posters || [];\r\n        const onPostersChange = this.props.onPostersChange;\r\n\r\n        return (\r\n            <DragDropContext onDragEnd={this.onDragEnd}>\r\n                <Droppable droppableId=\"droppable\">\r\n                    {(provided, snapshot) => (\r\n                        <div\r\n                            {...provided.droppableProps}\r\n                            ref={provided.innerRef}\r\n                            style={getListStyle(snapshot.isDraggingOver)}\r\n                        >\r\n                            {posters.map((item, index) => (\r\n                                <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                                    {(provided, snapshot) => (\r\n                                        <div\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.draggableProps}\r\n                                            {...provided.dragHandleProps}\r\n                                            style={getItemStyle(\r\n                                                snapshot.isDragging,\r\n                                                provided.draggableProps.style\r\n                                            )}\r\n                                        >\r\n                                            <div className=\"row pl-0 align-items-center\">\r\n                                                <div className=\"col-auto pl-0\">\r\n                                                    <img style={{maxHeight: '150px', maxWidth: '200px'}} className=\"img-fluid\" src={item.url} alt=\"\"/>\r\n                                                </div>\r\n                                                <div className=\"col-auto ml-auto\">\r\n                                                    <img\r\n                                                        style={{cursor: 'pointer'}}\r\n                                                        onClick={() => {onPostersChange(posters.filter(e => e.id !== item.id))}}\r\n                                                        src={deleteIcon}\r\n                                                        alt=\"delete\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"col-auto mx-2\">\r\n\r\n                                                    <img\r\n                                                        style={{cursor: 'grab'}}\r\n                                                        src={burgerIcon} alt=\"drag\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                                </Draggable>\r\n                            ))}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport './PosterList.scss';\r\nimport addIcon from '../../icons/add.svg'\r\nimport Dnd from './Dnd'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport function PosterList({posters = [], onPostersChange}) {\r\n\r\n    const onFile = (e) => {\r\n        /*TODO save file on server*/\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        if (e.target.files && e.target.files.length) {\r\n            let file = e.target.files[0];\r\n            /*TODO save file on server*/\r\n            let file_url = URL.createObjectURL(file);\r\n\r\n            onPostersChange([\r\n                ...posters,\r\n                {\r\n                    id: uuidv4(),\r\n                    url: file_url\r\n                }\r\n            ])\r\n\r\n        }\r\n        e.target.value = '';\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"subheader\">Превью и обложки курса</h2>\r\n            <p className=\"description\">Красивые обложки будут дополнительно притягивать и рекламировать Ваш курс</p>\r\n            <div className=\"hr\"/>\r\n\r\n            <label className=\"add-label\" htmlFor=\"add_poster\">\r\n                <img src={addIcon} alt=\"addIcon\"/>\r\n                Добавить обложку\r\n            </label>\r\n            <input onChange={onFile} style={{display: 'none'}} id=\"add_poster\" type=\"file\"/>\r\n\r\n            <p className=\"description\">Вы можете добавить до 5 фото, размером не более 10 мб.</p>\r\n            <p className=\"description\">Размещайте важную информацию ближе к центру изображения</p>\r\n\r\n            <h3 className=\"poster-header mt-4\">Загруженные обложки</h3>\r\n            <Dnd posters={posters} onPostersChange={onPostersChange}/>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nexport function PosterIcon({color = '#434DFF'}) {\r\n    return (\r\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M17.4194 6.00182C18.6168 6.01894 19.2646 6.15936 19.9369 6.51889C20.6 6.87355 21.1265 7.39997 21.4811 8.06313C21.8663 8.78342 22 9.47564 22 10.8458V16.1542C22 17.5244 21.8663 18.2166 21.4811 18.9369C21.1265 19.6 20.6 20.1265 19.9369 20.4811C19.2166 20.8663 18.5244 21 17.1542 21H6.84584C5.47565 21 4.78343 20.8663 4.06315 20.4811C3.39999 20.1265 2.87356 19.6 2.5189 18.9369C2.15937 18.2646 2.01895 17.6168 2.00183 16.4194V10.5806C2.01895 9.38322 2.15937 8.7354 2.5189 8.06313C2.87356 7.39997 3.39999 6.87355 4.06315 6.51889C4.73541 6.15936 5.38323 6.01894 6.58063 6.00182H17.4194ZM17.1049 13.4303L13.4389 17.8854C13.0883 18.3114 12.459 18.373 12.0325 18.0231L10.0609 16.4058L7.43383 19H17.1542L17.5719 18.9953C18.3313 18.9762 18.6586 18.8967 18.9937 18.7175C19.3083 18.5492 19.5492 18.3083 19.7175 17.9937C19.8967 17.6586 19.9763 17.3313 19.9953 16.5719L20 16.1542L20.0004 15.693C19.8483 15.5695 19.6375 15.3859 19.3425 15.1284L17.1049 13.4303ZM17.1542 8H6.84584L6.4281 8.00468C5.66871 8.02375 5.34143 8.10331 5.00634 8.28251C4.69172 8.45077 4.45079 8.69171 4.28253 9.00633C4.07345 9.39726 4.00001 9.77757 4.00001 10.8458V16.1542C4.00001 17.2224 4.07345 17.6027 4.28253 17.9937C4.43556 18.2798 4.64871 18.505 4.92273 18.67L9.2985 14.3498C9.66282 13.9912 10.239 13.9651 10.6342 14.2894L12.5289 15.8436L16.2147 11.3646C16.5728 10.9294 17.2197 10.876 17.6443 11.2466L19.9998 13.103L20 10.8458L19.9953 10.4281C19.9763 9.66869 19.8967 9.34141 19.7175 9.00633C19.5492 8.69171 19.3083 8.45077 18.9937 8.28251C18.6586 8.10331 18.3313 8.02375 17.5719 8.00468L17.1542 8ZM7.50001 10C8.32844 10 9.00001 10.6716 9.00001 11.5C9.00001 12.3284 8.32844 13 7.50001 13C6.67159 13 6.00001 12.3284 6.00001 11.5C6.00001 10.6716 6.67159 10 7.50001 10ZM15 2C16.0544 2 16.9182 2.81588 16.9945 3.85074L17 4H7.00001C7.00001 2.89543 7.89544 2 9.00001 2H15Z\" fill={color}/>\r\n        </svg>\r\n    )\r\n}","import React from \"react\";\r\nexport function LessonIcon({color = '#434DFF'}) {\r\n    return (\r\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M12.7476 5.14288C14.2759 5.14288 14.8301 5.30201 15.3888 5.60083C15.9476 5.89964 16.386 6.33813 16.6849 6.89686C16.8839 7.26902 17.021 7.63917 17.0903 8.29652L18.8104 7.22194C19.8742 6.55707 21.2755 6.88046 21.9404 7.94425C22.166 8.30525 22.2857 8.7224 22.2857 9.14811V14.8519C22.2857 16.1064 21.2687 17.1234 20.0142 17.1234C19.5885 17.1234 19.1714 17.0037 18.8104 16.7781L17.0903 15.7035C17.021 16.3609 16.8839 16.731 16.6849 17.1032C16.386 17.6619 15.9476 18.1004 15.3888 18.3992C14.8301 18.698 14.2759 18.8572 12.7476 18.8572H6.10946C4.58115 18.8572 4.02694 18.698 3.46821 18.3992C2.90948 18.1004 2.47099 17.6619 2.17218 17.1032C1.87336 16.5445 1.71423 15.9903 1.71423 14.4619V9.53812C1.71423 8.0098 1.87336 7.45559 2.17218 6.89686C2.47099 6.33813 2.90948 5.89964 3.46821 5.60083C4.02694 5.30201 4.58115 5.14288 6.10946 5.14288H12.7476ZM12.9513 6.85796L6.10946 6.85717C4.97486 6.85717 4.62934 6.92389 4.27667 7.1125C4.01668 7.25155 3.8229 7.44533 3.68385 7.70532C3.50703 8.03595 3.43734 8.36029 3.42931 9.33443L3.42852 14.4619C3.42852 15.5965 3.49524 15.9421 3.68385 16.2947C3.8229 16.5547 4.01668 16.7485 4.27667 16.8875C4.62934 17.0762 4.97486 17.1429 6.10946 17.1429H12.7476C13.8822 17.1429 14.2277 17.0762 14.5804 16.8875C14.8404 16.7485 15.0341 16.5547 15.1732 16.2947C15.3618 15.9421 15.4285 15.5965 15.4285 14.4619V9.53812C15.4285 8.40351 15.3618 8.05799 15.1732 7.70532C15.0341 7.44533 14.8404 7.25155 14.5804 7.1125C14.2497 6.93568 13.9254 6.86599 12.9513 6.85796ZM19.7189 8.67565L17.1428 10.2857V13.7143L19.7189 15.3244C19.8075 15.3797 19.9098 15.4091 20.0142 15.4091C20.3219 15.4091 20.5714 15.1596 20.5714 14.8519V9.14811C20.5714 9.04369 20.542 8.94137 20.4867 8.85282C20.3236 8.59189 19.9799 8.51257 19.7189 8.67565Z\" fill={color}/>\r\n        </svg>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport loadIcon from \"../../../icons/load.svg\";\r\nimport './VideoDrop.scss'\r\n\r\n\r\nexport const VideoDrop = ({onVideoChange}) => {\r\n\r\n\r\n    const [active, setActive] = useState(false);\r\n    const [input, setInput] = useState(false);\r\n    const onDragOver = (e) => {\r\n        e.preventDefault();\r\n        setActive(true);\r\n    };\r\n    const setNotActive = (e) => {\r\n        e.preventDefault();\r\n        setActive(false);\r\n    };\r\n    const onInputChange = (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        if (e.target.files && e.target.files.length) {\r\n            let file = e.target.files[0];\r\n            let file_url = URL.createObjectURL(file);\r\n\r\n            onVideoChange(file_url);\r\n\r\n            /*TODO save file on server*/\r\n        }\r\n\r\n    };\r\n    const onClick = () => input && input.click()\r\n    const onDrop = (e) => {\r\n        // Prevent default behavior (Prevent file from being opened)\r\n        e.preventDefault();\r\n        if (e.dataTransfer.items) {\r\n            // Use DataTransferItemList interface to access the file(s)\r\n            for (let i = 0; i < e.dataTransfer.items.length; i++) {\r\n                // If dropped items aren't files, reject them\r\n                if (e.dataTransfer.items[i].kind === 'file') {\r\n                    let file = e.dataTransfer.items[i].getAsFile();\r\n                    let file_url = URL.createObjectURL(file);\r\n\r\n                    onVideoChange(file_url);\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            // Use DataTransfer interface to access the file(s)\r\n            if (e.dataTransfer.files.length) {\r\n                let file = e.dataTransfer.files[0];\r\n                let file_url = URL.createObjectURL(file);\r\n                onVideoChange(file_url);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div\r\n            onDragOver={onDragOver}\r\n            onDragEnd={setNotActive}\r\n            onDragLeave={setNotActive}\r\n            onDragExit={setNotActive}\r\n            onDrop={onDrop}\r\n            className={\"video-drop-down \"  + ( active ? 'active' : '')}\r\n            onClick={onClick}\r\n        >\r\n            <input ref={e => setInput(e)} onChange={onInputChange}  type=\"file\" style={{display: 'none'}}/>\r\n            <div className=\"video-drop-down-placeholder\">\r\n                <img className=\"video-drop-down-placeholder-icon\" src={loadIcon} alt=\"loadIcon\"/>\r\n                Загрузить видео урока\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport imgIcon from \"../../../icons/img.svg\";\r\nimport './ImageDrop.scss'\r\n\r\n\r\nexport const ImageDrop = ({onPosterChange}) => {\r\n\r\n\r\n    const [active, setActive] = useState(false);\r\n    const [input, setInput] = useState(false);\r\n    const onDragOver = (e) => {\r\n        e.preventDefault();\r\n        setActive(true);\r\n    };\r\n    const setNotActive = (e) => {\r\n        e.preventDefault();\r\n        setActive(false);\r\n    };\r\n    const onInputChange = (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        if (e.target.files && e.target.files.length) {\r\n            let file = e.target.files[0];\r\n            let file_url = URL.createObjectURL(file);\r\n\r\n            onPosterChange(file_url);\r\n\r\n            /*TODO save file on server*/\r\n        }\r\n\r\n    };\r\n    const onClick = () => input && input.click()\r\n    const onDrop = (e) => {\r\n        // Prevent default behavior (Prevent file from being opened)\r\n        e.preventDefault();\r\n        if (e.dataTransfer.items) {\r\n            // Use DataTransferItemList interface to access the file(s)\r\n            for (let i = 0; i < e.dataTransfer.items.length; i++) {\r\n                // If dropped items aren't files, reject them\r\n                if (e.dataTransfer.items[i].kind === 'file') {\r\n                    let file = e.dataTransfer.items[i].getAsFile();\r\n                    let file_url = URL.createObjectURL(file);\r\n\r\n                    onPosterChange(file_url);\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            // Use DataTransfer interface to access the file(s)\r\n            if (e.dataTransfer.files.length) {\r\n                let file = e.dataTransfer.files[0];\r\n                let file_url = URL.createObjectURL(file);\r\n                onPosterChange(file_url);\r\n            }\r\n        }\r\n        setActive(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <div\r\n            onDragOver={onDragOver}\r\n            onDragEnd={setNotActive}\r\n            onDragLeave={setNotActive}\r\n            onDragExit={setNotActive}\r\n            onDrop={onDrop}\r\n            className={\"image-drop-down \"  + ( active ? 'active' : '')}\r\n            onClick={onClick}\r\n        >\r\n            <input ref={e => setInput(e)} onChange={onInputChange}  type=\"file\" style={{display: 'none'}}/>\r\n            <div className=\"image-drop-down-placeholder\">\r\n                <img className=\"image-drop-down-placeholder-icon\" src={imgIcon} alt=\"loadIcon\"/>\r\n                Изменить обложку\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport './LessonList.scss'\r\nimport {Collapse} from 'reactstrap';\r\nimport collapseIcon from '../../icons/collapse.svg'\r\nimport loadIcon from '../../icons/load.svg'\r\nimport {VideoDrop} from \"./VideoDrop/VideoDrop\";\r\nimport {ImageDrop} from \"./ImageDrop/ImageDrop\";\r\n\r\nexport const LessonList = ({lessons = [], onLessonsChange}) => {\r\n\r\n    const [openedId, setOpenedId] = useState([]);\r\n\r\n    const updateLesson = (lesson) => {\r\n        let i = lessons.findIndex(e => e.id === lesson.id);\r\n        if (i >= 0) {\r\n            onLessonsChange([\r\n                ...lessons.slice(0, i),\r\n                lesson,\r\n                ...lessons.slice(i + 1)\r\n            ])\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"subheader\">Уроки</h2>\r\n            <p className=\"description\">В системе можно для курса загрузить несколько уроков</p>\r\n\r\n            <div className=\"lesson-list\">\r\n                {\r\n                    lessons.map((lesson, i) => {\r\n                        const isOpen = !!openedId.find(e => e === lesson.id);\r\n\r\n                        return (\r\n                            <div key={lesson.id} className=\"lesson-list-item\">\r\n                                <div className=\"row align-items-center justify-content-between\">\r\n                                    <div className=\"col-8\">\r\n                                        <h2 className=\"lesson-list-item-header\">Урок {i + 1}</h2>\r\n                                    </div>\r\n                                    <div className=\"col-auto\">\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                if (isOpen) {\r\n                                                    setOpenedId(openedId.filter(e => e !== lesson.id))\r\n                                                } else {\r\n                                                    setOpenedId([\r\n                                                        ...openedId,\r\n                                                        lesson.id\r\n                                                    ])\r\n                                                }\r\n                                            }}\r\n                                            style={{transform: isOpen ? 'rotate(180deg)' : ''}}\r\n                                            className=\"lesson-list-item-collapse\"\r\n                                            src={collapseIcon} alt=\"\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <Collapse isOpen={isOpen}>\r\n                                    <div className=\"row pb-3\">\r\n                                        <div className=\"col-12\">\r\n                                            <p className=\"description\">\r\n                                                Назовите и кратко расскажите, что будет содержаться в этом конкретном\r\n                                                уроке.\r\n                                                Так Вы поможете лучше понять, что содержится в вашем курсе. Но вообще,\r\n                                                описание необязательно\r\n                                            </p>\r\n                                        </div>\r\n                                        <div className=\"col-9 ml-auto\">\r\n                                            {\r\n                                                lesson.video_url ? (\r\n                                                    <video\r\n                                                        className=\"video\" controls\r\n                                                        src={lesson.video_url}\r\n                                                    />\r\n                                                ) : (\r\n                                                    <VideoDrop onVideoChange={e => updateLesson({\r\n                                                        ...lesson,\r\n                                                        video_url: e,\r\n                                                    })}/>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"w-100 mt-3\"/>\r\n\r\n\r\n                                        <div className=\"col-3\">\r\n                                            <label className=\"input-label\">Обложка:</label>\r\n                                        </div>\r\n                                        <div className=\"col-3\">\r\n                                            <ImageDrop onPosterChange={e => updateLesson({\r\n                                                ...lesson,\r\n                                                poster_url: e,\r\n                                            })}/>\r\n                                        </div>\r\n                                        <div className=\"col-3 \">\r\n\r\n                                            {\r\n                                                !!lesson.poster_url && (\r\n                                                    <div className=\"image-drop-down-poster\"\r\n                                                         style={{backgroundImage: `url(${lesson.poster_url})`}}/>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n\r\n                                        <div className=\"w-100\"/>\r\n                                        <div className=\"col-3\">\r\n                                            <label className=\"input-label\" htmlFor=\"input1\">Название урока:</label>\r\n                                        </div>\r\n                                        <div className=\"col-9 mt-2\">\r\n                                            <input\r\n                                                onChange={e => updateLesson({\r\n                                                    ...lesson,\r\n                                                    name: e.target.value\r\n                                                })}\r\n                                                id=\"input1\"\r\n                                                value={lesson.name}\r\n                                                placeholder=\"Название урока\"\r\n                                                type=\"text\"\r\n                                                className=\"started-input\"/>\r\n                                        </div>\r\n                                        <div className=\"col-3\">\r\n                                            <label className=\"input-label\" htmlFor=\"textarea\">Описание:</label>\r\n                                        </div>\r\n                                        <div className=\"col-9 mt-2\">\r\n                                            <textarea\r\n                                                onChange={e => updateLesson({\r\n                                                    ...lesson,\r\n                                                    description: e.target.value\r\n                                                })}\r\n                                                id=\"textarea\"\r\n                                                value={lesson.description}\r\n                                                className=\"started-textarea\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                </Collapse>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n\r\n};","import React, {useEffect, useState} from 'react';\r\nimport './CourseTestContainer.scss'\r\nimport {PosterList} from \"../PosterList/PosterList\";\r\nimport addIcon from \"../../icons/add.svg\";\r\nimport {PosterIcon} from \"./icons/PosterIcon\";\r\nimport {LessonIcon} from \"./icons/LessonIcon\";\r\nimport {LessonList} from \"../LessonList/LessonList\";\r\n\r\nconst STEPS = {\r\n    posters: 'posters',\r\n    lessons: 'lessons'\r\n\r\n};\r\n\r\nexport function CourseTestContainer(props) {\r\n\r\n    const [step, setStep] = useState(STEPS.posters);\r\n    /*TODO возможно лучше useReducer*/\r\n    const [course, setCourse] = useState();\r\n\r\n    useEffect(() => {\r\n        /*TODO API fetch*/\r\n        setCourse({\r\n            name: 'Название курса будет здесь',\r\n            posters: [\r\n                {\r\n                    id: '1',\r\n                    url: '/images/img1.png'\r\n                },\r\n                {\r\n                    id: '2',\r\n                    url: '/images/img2.png'\r\n                },\r\n                {\r\n                    id: '3',\r\n                    url: '/images/img3.png'\r\n                },\r\n            ],\r\n            lessons: [\r\n                {\r\n                    id: '1',\r\n                    name: 'Урок для начинающих программистов Frontend',\r\n                    description: 'Описание урока для начинающих программистов Frontend'\r\n                },\r\n                {\r\n                    id: '2',\r\n                    name: 'Урок 2'\r\n                }\r\n            ]\r\n        })\r\n    }, []);\r\n\r\n    const onPostersChange = (posters) => {\r\n        setCourse({\r\n            ...course,\r\n            posters\r\n        })\r\n    };\r\n\r\n    const onLessonsChange = (lessons) => {\r\n        setCourse({\r\n            ...course,\r\n            lessons\r\n        })\r\n    };\r\n\r\n    /*TODO norm proverku*/\r\n    if (!course) {\r\n        return '';\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row mt-5\">\r\n                <h1 className=\"bold-header\">Курс: {course.name}</h1>\r\n            </div>\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-8 pl-0 pr-5\">\r\n                    {\r\n                        (() => {\r\n                            switch (step) {\r\n                                case STEPS.posters: {\r\n                                    return <PosterList onPostersChange={onPostersChange} posters={course.posters}/>\r\n                                }\r\n                                case STEPS.lessons: {\r\n                                    return <LessonList lessons={course.lessons} onLessonsChange={onLessonsChange}/>\r\n                                }\r\n                            }\r\n                        })()\r\n                    }\r\n                </div>\r\n                <div className=\"col-3\">\r\n                    <button className=\"save-button\">Сохранить</button>\r\n                    <div className=\"w-100 my-4\"></div>\r\n                    <div className=\"started-btn-group\">\r\n                        <button onClick={() => setStep(STEPS.posters)} className={\"started-btn \" + (step === STEPS.posters ? 'active' : '')}>\r\n                            <PosterIcon color={step === STEPS.posters ? '#434DFF' : '#AEB7C2'}/>\r\n                            Обложки и фото\r\n                        </button>\r\n                        <button onClick={() => setStep(STEPS.lessons)} className={\"started-btn \" + (step === STEPS.lessons ? 'active' : '')}>\r\n                            <LessonIcon color={step === STEPS.lessons ? '#434DFF' : '#AEB7C2'}/>\r\n                            Уроки\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport {CourseTestContainer} from \"./components/CourseTestContainer/CourseTestContainer\";\n\nfunction App() {\n  return (\n    <CourseTestContainer/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}